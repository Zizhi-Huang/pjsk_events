{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":12255282,"sourceType":"datasetVersion","datasetId":7722156},{"sourceId":12255468,"sourceType":"datasetVersion","datasetId":7627053},{"sourceId":246248334,"sourceType":"kernelVersion"}],"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session\n\ndirevents = \"/kaggle/input/events-data/pjsk_events.csv\"\ndirchara = \"/kaggle/input/events-data/pjsk_chara.csv\"\n\nevents = pd.read_csv(direvents,index_col=[0,1],parse_dates=[3,4])\n\nchara = pd.read_csv(dirchara,index_col=\"id\")","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-06-24T01:47:45.906599Z","iopub.execute_input":"2025-06-24T01:47:45.906916Z","iopub.status.idle":"2025-06-24T01:47:46.336241Z","shell.execute_reply.started":"2025-06-24T01:47:45.906891Z","shell.execute_reply":"2025-06-24T01:47:46.335536Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/pjsk-events/__results__.html\n/kaggle/input/pjsk-events/current_event_sub_rankings.png\n/kaggle/input/pjsk-events/__notebook__.ipynb\n/kaggle/input/pjsk-events/current_event_total_rankings.png\n/kaggle/input/pjsk-events/__output__.json\n/kaggle/input/pjsk-events/custom.css\n/kaggle/input/pjsk-events/__results___files/__results___20_0.png\n/kaggle/input/pjsk-events/__results___files/__results___17_0.png\n/kaggle/input/chinese-and-japanese-fontfamily/AlibabaPuHuiTi-3-85-Bold.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansCN-Regular.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansCN-Light.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansCN-Normal.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansJP-Heavy.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansJP-Light.otf\n/kaggle/input/chinese-and-japanese-fontfamily/AlibabaPuHuiTi-3-85-Bold.ttf\n/kaggle/input/chinese-and-japanese-fontfamily/AlibabaPuHuiTi-3-55-RegularL3.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansJP-Normal.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansJP-Medium.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansJP-ExtraLight.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansCN-Medium.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansCN-Bold.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansJP-Bold.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansCN-Heavy.otf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansCN-ExtraLight.otf\n/kaggle/input/chinese-and-japanese-fontfamily/AlibabaPuHuiTi-3-55-RegularL3.ttf\n/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansJP-Regular.otf\n/kaggle/input/events-data/pjsk_chara.csv\n/kaggle/input/events-data/pjsk_events.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"# Installing Chinese or Japanese Fontfamily","metadata":{}},{"cell_type":"markdown","source":"> No need to run when not in use.","metadata":{}},{"cell_type":"code","source":"import matplotlib.font_manager as fm\n\nflag = True\nfor font in fm.findSystemFonts():\n    if \"NotoSansCJK\" in font:\n        flag = False\n\nif flag:\n    !apt-get update\n    !apt-get install -y fonts-noto-cjk\n\nfont_path_r = \"/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc\"\nfont_path_b = \"/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc\"\ncn_font_rgr = fm.FontProperties(fname=font_path_r)\ncn_font_bold = fm.FontProperties(fname=font_path_b)\n\n#plt.rcParams[\"font.family\"] = cn_font_bold.get_name()\n#plt.rcParams[\"axes.unicode_minus\"] = False","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-24T01:47:57.599663Z","iopub.execute_input":"2025-06-24T01:47:57.599983Z","iopub.status.idle":"2025-06-24T01:48:13.367635Z","shell.execute_reply.started":"2025-06-24T01:47:57.599959Z","shell.execute_reply":"2025-06-24T01:48:13.366434Z"}},"outputs":[{"name":"stdout","text":"Hit:1 http://archive.ubuntu.com/ubuntu jammy InRelease\nGet:2 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [128 kB]                             \nGet:3 https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/ InRelease [3,632 B]                \nGet:4 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  InRelease [1,581 B]\nGet:5 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [127 kB]                           \nGet:6 http://security.ubuntu.com/ubuntu jammy-security InRelease [129 kB]                           \nGet:7 https://r2u.stat.illinois.edu/ubuntu jammy InRelease [6,555 B]                                \nGet:8 https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/ Packages [79.8 kB]                 \nGet:9 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy InRelease [18.1 kB]   \nGet:10 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  Packages [1,798 kB]\nGet:11 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu jammy InRelease [24.3 kB]\nGet:12 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1,561 kB]\nGet:13 https://ppa.launchpadcontent.net/ubuntugis/ppa/ubuntu jammy InRelease [24.6 kB]\nGet:14 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [3,347 kB]           \nGet:15 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [4,726 kB]\nGet:16 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [35.2 kB]\nGet:17 http://archive.ubuntu.com/ubuntu jammy-backports/main amd64 Packages [83.2 kB]\nGet:18 https://r2u.stat.illinois.edu/ubuntu jammy/main all Packages [9,050 kB]\nGet:19 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [1,253 kB]\nGet:20 https://r2u.stat.illinois.edu/ubuntu jammy/main amd64 Packages [2,747 kB]                    \nGet:21 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 Packages [33.2 kB]   \nGet:22 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu jammy/main amd64 Packages [46.6 kB]\nGet:23 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [4,532 kB]\nGet:24 https://ppa.launchpadcontent.net/ubuntugis/ppa/ubuntu jammy/main amd64 Packages [75.1 kB]\nGet:25 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [3,024 kB]           \nFetched 32.9 MB in 3s (11.5 MB/s)                            \nReading package lists... Done\nW: Skipping acquire of configured file 'main/source/Sources' as repository 'https://r2u.stat.illinois.edu/ubuntu jammy InRelease' does not seem to provide it (sources.list entry misspelt?)\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nSuggested packages:\n  fonts-noto-cjk-extra\nThe following NEW packages will be installed:\n  fonts-noto-cjk\n0 upgraded, 1 newly installed, 0 to remove and 196 not upgraded.\nNeed to get 61.2 MB of archives.\nAfter this operation, 93.2 MB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu jammy/main amd64 fonts-noto-cjk all 1:20220127+repack1-1 [61.2 MB]\nFetched 61.2 MB in 2s (29.8 MB/s)         \nSelecting previously unselected package fonts-noto-cjk.\n(Reading database ... 129184 files and directories currently installed.)\nPreparing to unpack .../fonts-noto-cjk_1%3a20220127+repack1-1_all.deb ...\nUnpacking fonts-noto-cjk (1:20220127+repack1-1) ...\nSetting up fonts-noto-cjk (1:20220127+repack1-1) ...\nProcessing triggers for fontconfig (2.13.1-4.2ubuntu5) ...\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"import matplotlib.font_manager as fm\n\nfont_path_r = \"/kaggle/input/chinese-and-japanese-fontfamily/SourceHanSansJP-Normal.otf\"\nfont_path_b = \"/kaggle/input/chinese-and-japanese-fontfamily/AlibabaPuHuiTi-3-85-Bold.ttf\"\n\ncn_font_rgr = fm.FontProperties(fname=font_path_r)\ncn_font_bold = fm.FontProperties(fname=font_path_b)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Processing the ordinary events","metadata":{}},{"cell_type":"code","source":"currentID = 169\ncurrentChapter = \"-\"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"row = events.loc[currentID,currentChapter]","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"lines = [1,10,20,50,100,200,300,400,500,1000,2000,3000,5000,10000,30000,50000,100000,300000]\ndata = row[[\"pt_lines_\"+str(i) for i in lines]].values\n\ndata = pd.DataFrame({\"Rank\":lines,\"pt\":data},dtype=\"int64\")\n\nevent_hours = int((row[\"end_at(JST)\"] - row[\"start_at(JST)\"]).total_seconds() / 3600)\ndata[\"per_hour_pt\"] = data[\"pt\"] / event_hours","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"c = chara.loc[chara.name_abbr==row.ban].color\n\nfig, (ax1,ax2) = plt.subplots(2,1,figsize=(8,11))\n\ndata.plot(x=\"Rank\",y=\"pt\",kind=\"bar\",logy=True,ax=ax1,\n               title=\"pt\",color=c,legend=0)\n\nax1.set_title(ax1.get_title(),fontproperties=cn_font_bold,fontsize=15)\nax1.set_xlabel(\"排名\",fontproperties=cn_font_rgr,fontsize=14)\nax1.grid(axis=\"y\",c=\"grey\",ls=\"--\",alpha=0.5)\n\ndata.plot(x=\"Rank\",y=\"per_hour_pt\",kind=\"bar\",logy=True,ax=ax2,\n                title=\"每小时平均增速 (pt/h)\",color=c,legend=0)\nax2.set_title(ax2.get_title(),fontproperties=cn_font_bold,fontsize=15)\nax2.set_xlabel(\"排名\",fontproperties=cn_font_rgr,fontsize=14)\nax2.grid(axis=\"y\",c=\"grey\",ls=\"--\",alpha=0.5)\n\nplt.tight_layout()\n#plt.savefig(\"/kaggle/working/\"+\"pt_\"+str(currentID)+\".png\",format=\"png\")","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"similar = events.loc[(events.event_type==row.event_type),\n                        [\"title\",\"start_at(JPT)\",\"end_at(JPT)\",\"main_chara\",\"ban\",\"attr\",\n                         \"pt_lines_50\",\"pt_lines_100\",\"pt_lines_1000\",\"pt_lines_10000\",\n                         \"pt_lines_100000\"]\n                    ]\n\nsimilar = similar.droplevel(\"chapter\",axis=\"index\")","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def hourly_pt(row):\n    during = int((row[\"end_at(JST)\"] - row[\"start_at(JST)\"]).total_seconds() / 3600)\n    calculatels = [\"pt_lines_\"+str(i) for i in [50,100,1000,10000,100000]]\n    row[calculatels] = row[calculatels] / during\n    return row\nhourly = similar.apply(hourly_pt,axis=\"columns\")","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"lines = [50,100,1000,10000,100000]\ndata = similar.tail()[[\"pt_lines_\"+str(i) for i in lines]]\ndata.columns = lines\n\nhourly_data = hourly.tail()[[\"pt_lines_\"+str(i) for i in lines]]\nhourly_data.columns = lines","metadata":{"trusted":true,"jupyter":{"source_hidden":true}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def PlotLines(df,num,group=False):\n    lines = [50,100,1000,10000,100000]\n    if group:\n        df = df.loc[df.main_chara==row.main_chara]\n    pos = df.index.get_loc(num)\n    data = df[pos-4:pos+1][[\"pt_lines_\"+str(i) for i in lines]]\n    data.columns = lines\n    return data\n\ndata, hourly_data = PlotLines(similar,currentID,group=1), PlotLines(hourly,currentID,group=1)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"c = {i:chara.loc[chara.name_abbr==similar.loc[i,\"ban\"]].color for i in data.index}\n\nfig, (ax1,ax2) = plt.subplots(2,1,figsize=[8,11])\ndata.T.plot(kind=\"bar\",logy=True,color=c,ax=ax1,\n#           title=\"对比近期同类型活动数据\")\n            title = \"对比近期同组合同类型活动数据\")\nax1.set_xlabel(\"排名\",fontproperties=cn_font_rgr,fontsize=14)\nax1.set_xticklabels(ax1.get_xticklabels(),rotation=0)\nax1.set_title(ax1.get_title(),fontproperties=cn_font_bold,fontsize=15)\nax1.grid(axis=\"y\",c=\"grey\",ls=\"--\",alpha=0.5)\nax1.legend(loc=1,title=None,fontsize=\"large\")\n\nhourly_data.T.plot(kind=\"bar\",logy=True,color=c,ax=ax2,\n                  title=\"每小时平均增速(pt/h)\",legend=False)\nax2.set_xlabel(\"排名\",fontproperties=cn_font_rgr,fontsize=14)\nax2.set_xticklabels(ax2.get_xticklabels(),rotation=0)\nax2.set_title(ax2.get_title(),fontproperties=cn_font_bold,fontsize=15)\nax2.grid(axis=\"y\",c=\"grey\",ls=\"--\",alpha=0.5)\n\nplt.tight_layout()\n#plt.savefig(\"/kaggle/working\"+\"/\"+\"Recent_comparison_of_similar_events.png\",format=\"png\")\nplt.savefig(\"/kaggle/working\"+\"/\"+\"Recent_comparison_of_same_group_events.png\",format=\"png\")","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Processing world-link events","metadata":{}},{"cell_type":"code","source":"wlevents = events.loc[events.event_type==\"ワールドリンク\"]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-24T01:52:14.003703Z","iopub.execute_input":"2025-06-24T01:52:14.003990Z","iopub.status.idle":"2025-06-24T01:52:14.015386Z","shell.execute_reply.started":"2025-06-24T01:52:14.003965Z","shell.execute_reply":"2025-06-24T01:52:14.014209Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"#currentID = 170\ncurrentID = 167\n#currentID = 163","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-24T01:51:42.617246Z","iopub.execute_input":"2025-06-24T01:51:42.617600Z","iopub.status.idle":"2025-06-24T01:51:42.622669Z","shell.execute_reply.started":"2025-06-24T01:51:42.617566Z","shell.execute_reply":"2025-06-24T01:51:42.621467Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"total = wlevents.loc[currentID,\"-\"]","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"c = {0:\"#ffffff\",1:\"#4455dd\",2:\"#88dd44\",3:\"#ee1166\",4:\"#ff9900\",5:\"#884499\"}","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fig,ax0 = plt.subplots(figsize=(8,6))\ntotal[[\"pt_lines_\" in idx for idx in total.index]].astype(\"int32\").plot.bar(color=c[4],logy=True,ax=ax0)\nax0.set_title(\"総合\",fontproperties=cn_font_bold,fontsize=15)\nax0.set_xlabel(\"排名\",fontproperties=cn_font_rgr,fontsize=14)\nax0.set_xticklabels([lb.get_text().lstrip(\"pt_lines_\") for lb in ax0.get_xticklabels()])\nax0.grid(axis=\"y\",c=\"grey\",ls=\"--\",alpha=0.5)\n\nplt.tight_layout()\n#plt.savefig(\"/kaggle/working/\"+\"current_event_total_rankings_\"+str(currentID)+\".png\",format=\"png\")","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"previous = 124\nlast = 163","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-24T01:54:10.410602Z","iopub.execute_input":"2025-06-24T01:54:10.410895Z","iopub.status.idle":"2025-06-24T01:54:10.415493Z","shell.execute_reply.started":"2025-06-24T01:54:10.410874Z","shell.execute_reply":"2025-06-24T01:54:10.414770Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"def PlotLines(ID):\n    lines = [1,50,100,500,1000,5000,10000,100000]\n    comparison = wlevents.loc[(ID,\"-\"),[\"pt_lines_\"+str(i) for i in lines]]\n    \n    comparison = comparison.droplevel(\"chapter\",axis=\"index\")\n    comparison.columns = lines\n    \n    new_idx = \"(\" + comparison.index.astype(\"str\") + \") \" + wlevents.loc[(comparison.index,\"-\"),\"title\"].values\n    comparison.index = new_idx\n    comparison = comparison.rename_axis(\"活动\")\n    \n    return comparison\n\ncomparison_last = PlotLines([last,currentID])\ncomparison_previous = PlotLines([previous,currentID])","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def highlight_max(s, props=''):\n    return np.where(s == np.nanmax(s.values), props, '')\ndef basic_fmt(styler):\n    styler.format(precision=0,thousands=\" \",decimal=\".\")\n    return styler\n    \ncomparison_previous.style.pipe(basic_fmt)\\\n    .apply(highlight_max,props=\"color:white;background-color:{}\".format(c[4]),axis=0)\\\n    .set_caption(\"对比WS一期wl活动\")","metadata":{"trusted":true,"jupyter":{"source_hidden":true}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import matplotlib.colors as colors\nrgb_color = colors.hex2color(c[4])\ntranscolor = (*rgb_color,0.6)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fig1,ax1 = plt.subplots(figsize=(8,6))\ncomparison_previous.T.plot.bar(color=[transcolor,c[4]],logy=True,ax=ax1)\nax1.legend(loc=1,prop=cn_font_rgr,fontsize=\"medium\")\nax1.set_xticklabels(ax1.get_xticklabels(),rotation=0)\nax1.set_title(\"对比wl一期活动\",fontproperties=cn_font_bold,fontsize=15)\nax1.grid(axis=\"y\",c=\"grey\",ls=\"--\",alpha=0.5)\nax1.set_xlabel(\"排名\",fontproperties=cn_font_rgr,fontsize=14)\nplt.tight_layout()\nplt.savefig(\"/kaggle/working/\"+\"previous_comparison.png\",format=\"png\")","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fig2,ax2 = plt.subplots(figsize=(8,6))\ncomparison_last.T.plot.bar(color=[c[3],c[4]],logy=True,ax=ax2)\nax2.legend(loc=1,prop=cn_font_rgr,fontsize=\"medium\")\nax2.set_xlabel(\"排名\",fontproperties=cn_font_rgr,fontsize=14)\nax2.set_xticklabels(ax2.get_xticklabels(),rotation=0)\nax2.set_title(\"对比上期wl活动\",fontproperties=cn_font_bold,fontsize=15)\nax2.grid(axis=\"y\",c=\"grey\",ls=\"--\",alpha=0.5)\nplt.tight_layout()\nplt.savefig(\"/kaggle/working/\"+\"last_comparison.png\",format=\"png\")","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"divide = wlevents.loc[(currentID,\"1\"):(currentID,\"4\")]\n\nnew_idx = np.array([chara.loc[chara.name_abbr==divide.iloc[n].ban, \"name\"].values for n in range(len(divide))])\ndivide = divide.set_index(new_idx.reshape(4,))\ndivide = divide.dropna(axis=1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-24T01:52:18.782167Z","iopub.execute_input":"2025-06-24T01:52:18.782817Z","iopub.status.idle":"2025-06-24T01:52:18.795839Z","shell.execute_reply.started":"2025-06-24T01:52:18.782782Z","shell.execute_reply":"2025-06-24T01:52:18.794901Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"c = {i:chara.loc[chara.name==i,\"color\"].values for i in divide.index}\n\nfig, ax1 = plt.subplots(figsize=(12,6))\ndivide.loc[:,[\"pt_lines_\" in cl for cl in divide.columns]].T.plot.bar(ax=ax1,color=c,logy=True)\nax1.legend(loc=1,prop=cn_font_rgr,fontsize=\"medium\")\nax1.set_xticklabels([lb.get_text().lstrip(\"pt_lines_\") for lb in ax1.get_xticklabels()],rotation=0)\nax1.grid(axis=\"y\",c=\"grey\",ls=\"--\",alpha=0.5)\nax1.set_title(\"各章节最终pt\",fontproperties=cn_font_bold,fontsize=15)\nax1.set_xlabel(\"排名\",fontproperties=cn_font_rgr,fontsize=14)\n\nplt.tight_layout()\n#plt.savefig(\"/kaggle/working/\"+\"current_event_sub_rankings_\"+str(currentID)+\".png\",format=\"png\")","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"rankings_25 = wlevents.loc[([163,167],slice(\"1\",\"6\")),:]\nnew_idx = np.array([chara.loc[chara.name_abbr==rankings_25.iloc[n].ban, \"name\"].values for n in range(len(rankings_25))])\nrankings_25 = rankings_25.set_index(new_idx.reshape(len(new_idx),))\nrankings_25 = rankings_25[[\"pt_lines_\"+str(i) for i in [20,50,100,500,1000,5000,10000,50000]]]\nrankings_25.columns = [20,50,100,500,1000,5000,10000,50000]\nrankings_25.index.name = \"namae\"","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-24T02:06:30.243146Z","iopub.execute_input":"2025-06-24T02:06:30.243436Z","iopub.status.idle":"2025-06-24T02:06:30.258625Z","shell.execute_reply.started":"2025-06-24T02:06:30.243414Z","shell.execute_reply":"2025-06-24T02:06:30.257902Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"def sub_rankings_order(col):\n    ordered = col.sort_values(ascending=False)\n    ordered = ordered.reset_index()\n    col = ordered[\"namae\"] + \" [\" + ordered[col.name].astype(str) + \"]\"\n    return col\n\nordered_rankings = rankings_25.apply(sub_rankings_order,axis=0)\nordered_rankings.index += 1\nordered_rankings.columns.name = \"rank\"","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-24T02:52:50.353099Z","iopub.execute_input":"2025-06-24T02:52:50.353411Z","iopub.status.idle":"2025-06-24T02:52:50.370517Z","shell.execute_reply.started":"2025-06-24T02:52:50.353386Z","shell.execute_reply":"2025-06-24T02:52:50.369464Z"}},"outputs":[],"execution_count":44},{"cell_type":"code","source":"ordered_rankings.to_csv(\"/kaggle/working/oredered_rankings.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-24T02:52:53.426072Z","iopub.execute_input":"2025-06-24T02:52:53.426394Z","iopub.status.idle":"2025-06-24T02:52:53.431968Z","shell.execute_reply.started":"2025-06-24T02:52:53.426368Z","shell.execute_reply":"2025-06-24T02:52:53.431250Z"}},"outputs":[],"execution_count":45}]}